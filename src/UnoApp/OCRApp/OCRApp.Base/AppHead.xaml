<local:App
    x:Class="OCRApp.AppHead"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:utu="using:Uno.Toolkit.UI"
    xmlns:toolkit="using:Uno.UI.Toolkit"
    xmlns:um="using:Uno.Material"
    xmlns:local="using:OCRApp">

  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///OCRApp/AppResources.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <CornerRadius x:Key="MaterialFabTabBarItemCornerRadius">50</CornerRadius>

      <x:Double x:Key="MaterialFabTabBarItemOffset">-40</x:Double>

      <x:Double x:Key="MaterialNavigationTabBarItemIconHeight">22</x:Double>

      <Style TargetType="utu:TabBarItem" BasedOn="{StaticResource MaterialBottomTabBarItemStyle}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="utu:TabBarItem">
              <Grid x:Name="LayoutRoot"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    Control.IsTemplateFocusTarget="True">

                <um:Ripple x:Name="RippleControl"
                           Padding="{TemplateBinding Padding}"
                           BorderBrush="{TemplateBinding BorderBrush}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           CornerRadius="{TemplateBinding CornerRadius}"
                           Feedback="{ThemeResource OnSurfaceBrush}"
                           FeedbackOpacity="{StaticResource PressedOpacity}">
                  <um:Ripple.Content>
                    <Grid>
                      <Rectangle x:Name="PointerRectangle"
                                 Fill="Transparent"
                                 Visibility="Collapsed" />

                      <Grid x:Name="ContentGrid"
                            RowSpacing="4">
                        <Grid.RowDefinitions>
                          <RowDefinition x:Name="IconRow"
                                 Height="*" />
                          <RowDefinition x:Name="ContentRow"
                                 Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid x:Name="ActiveIndicator"
                              Background="{ThemeResource SystemControlTransparentBrush}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Height="{StaticResource MaterialNavigationTabBarItemActiveIndicatorHeight}"
                              Width="{StaticResource MaterialNavigationTabBarItemActiveIndicatorWidth}"
                              CornerRadius="{StaticResource MaterialNavigationTabBarItemActiveIndicatorCornerRadius}">
                          <Border Width="{StaticResource MaterialNavigationTabBarItemIconHeight}"
                                  Height="{StaticResource MaterialNavigationTabBarItemIconHeight}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                            <Viewbox x:Name="IconBox"
                                     HorizontalAlignment="Center">
                              <ContentPresenter x:Name="Icon"
                                                Content="{TemplateBinding Icon}"
                                                Foreground="{TemplateBinding Foreground}" />
                            </Viewbox>
                          </Border>

                          <!--  BADGE  -->
                          <!--  This part can be replaced when InfoBadge will be available in WinUI3  -->
                          <!--  See this commit for the implementation: c935919b2c390014dd8509cc50e16b1549511ffa  -->
                          <!--  (Related Branch: dev/agzi/I274-InfoBadgeImplementationForTBI)  -->

                          <Grid Visibility="{TemplateBinding BadgeVisibility}">
                            <!--  Small Badge  -->
                            <Ellipse Height="{StaticResource MaterialNavigationTabBarItemSmallBadgeHeight}"
                                     Width="{StaticResource MaterialNavigationTabBarItemSmallBadgeWidth}"
                                     Margin="{StaticResource MaterialNavigationTabBarItemSmallBadgeMargin}"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Top"
                                     Fill="{ThemeResource ErrorBrush}"
                                     Visibility="{Binding BadgeValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToVisible}}" />

                            <!--  Large Badge  -->
                            <Border Height="{StaticResource MaterialNavigationTabBarItemLargeBadgeHeight}"
                                    MinWidth="{StaticResource MaterialNavigationTabBarItemLargeBadgeMinWidth}"
                                    Padding="{StaticResource MaterialNavigationTabBarItemLargeBadgePadding}"
                                    Margin="{StaticResource MaterialNavigationTabBarItemLargeBadgeMargin}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    CornerRadius="{StaticResource MaterialNavigationTabBarItemLargeBadgeCornerRadius}"
                                    Background="{ThemeResource ErrorBrush}"
                                    Visibility="{Binding BadgeValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}">
                              <TextBlock Text="{TemplateBinding BadgeValue}"
                                         MaxLines="1"
                                         TextAlignment="Center"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center"
                                         Foreground="{ThemeResource OnErrorBrush}"
                                         Style="{StaticResource LabelExtraSmall}" />
                            </Border>
                          </Grid>

                        </Grid>

                        <ContentPresenter x:Name="ContentPresenter"
                                          Grid.Row="1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Foreground="{TemplateBinding Foreground}"
                                          TextWrapping="NoWrap" />
                      </Grid>
                    </Grid>
                  </um:Ripple.Content>
                </um:Ripple>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>

      </Style>


      <Style x:Key="MaterialRoundedBottomFabTabBarItemStyle" TargetType="utu:TabBarItem" BasedOn="{StaticResource MaterialBottomFabTabBarItemStyle}">
        <Setter Property="CornerRadius" Value="{StaticResource MaterialFabTabBarItemCornerRadius}" />
        <Setter Property="RenderTransform">
          <Setter.Value>
            <TranslateTransform Y="{StaticResource MaterialFabTabBarItemOffset}" />
          </Setter.Value>
        </Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="utu:TabBarItem">
              <Grid VerticalAlignment="{TemplateBinding VerticalAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                <!-- Addition Grid to match the background page -->
                <Grid HorizontalAlignment="Center"
                      VerticalAlignment="Center">
                  <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" />

                  <Grid HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="Transparent"
                        Margin="8"
                        CornerRadius="{TemplateBinding CornerRadius}">

                    <um:Ripple x:Name="Ripple"
                               CornerRadius="{TemplateBinding CornerRadius}"
                               Feedback="{TemplateBinding Foreground}"
                               FeedbackOpacity="{StaticResource PressedOpacity}">
                      <Grid CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid x:Name="Root"
                              Background="{TemplateBinding Background}">
                          <StackPanel x:Name="ContentPanel"
                                      Margin="{TemplateBinding Padding}"
                                      Orientation="Horizontal">

                            <!--  Icon  -->
                            <Viewbox Width="{StaticResource MaterialFabTabBarItemContentWidthOrHeight}"
                                     Height="{StaticResource MaterialFabTabBarItemContentWidthOrHeight}"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Visibility="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                              <ContentPresenter x:Name="IconPresenter"
                                                Content="{TemplateBinding Icon}"
                                                Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Viewbox>

                            <!--  Icon/Content spacing  -->
                            <Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                              <Border Width="{StaticResource MaterialFabTabBarItemIconTextPadding}"
                                      Visibility="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
                            </Border>

                            <!--  Content  -->
                            <ContentPresenter x:Name="ContentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              FontFamily="{TemplateBinding FontFamily}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              FontSize="{TemplateBinding FontSize}" />
                          </StackPanel>
                        </Grid>
                        <Border x:Name="StateOverlay"
                            Background="Transparent"
                            CornerRadius="{TemplateBinding CornerRadius}" />
                      </Grid>
                    </um:Ripple>
                  </Grid>
                </Grid>

                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">

                    <VisualState x:Name="Normal" />

                    <VisualState x:Name="PointerOver">
                      <VisualState.Setters>
                        <Setter Target="StateOverlay.Background"
                                Value="{ThemeResource OnPrimaryContainerHoverBrush}" />
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                      <VisualState.Setters>
                        <Setter Target="StateOverlay.Background"
                                Value="{ThemeResource OnPrimaryContainerPressedBrush}" />
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <VisualState.Setters>
                        <Setter Target="IconPresenter.Foreground"
                                Value="{ThemeResource OnSurfaceDisabledBrush}" />
                        <Setter Target="ContentPresenter.Foreground"
                                Value="{ThemeResource OnSurfaceDisabledBrush}" />
                        <Setter Target="StateOverlay.Background"
                                Value="{ThemeResource OnSurfaceDisabledLowBrush}" />
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>

                  <VisualStateGroup x:Name="FocusStates">

                    <VisualState x:Name="Focused">
                      <VisualState.Setters>
                        <Setter Target="StateOverlay.Background"
                                Value="{ThemeResource OnPrimaryContainerFocusedBrush}" />
                      </VisualState.Setters>
                    </VisualState>

                    <VisualState x:Name="PointerFocused" />

                    <VisualState x:Name="Unfocused" />
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>

      </Style>
    </ResourceDictionary>
  </Application.Resources>

</local:App>
